@@ -0,0 +1,147 @@
USE [SQLTraining]
GO

/****** Object:  Table [dbo].[a05014_Profile]    Script Date: 20-10-2015 14:23:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

CREATE TABLE [dbo].[ProfileType](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Code] [varchar](30) NOT NULL,
	[Name] [varchar](100) NOT NULL,
	[Description] [varchar](1000) NULL,
 CONSTRAINT [PK_ProfileType] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO


=================================================================================================================----------------------------------------------------------------------------------------------------------


INSERT INTO ProfileType(Code,Name,Description)
VALUES ('ADMIN','Administrator','This user has full read write and execute permissions.')


INSERT INTO ProfileType(Code,Name,Description)
VALUES ('USER','User','This user has read permissions only.')


=================================================================================================================----------------------------------------------------------------------------------------------------------


USE [SQLTraining]
GO

/****** Object:  Table [dbo].[a05014_user]    Script Date: 20-10-2015 14:16:44 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

CREATE TABLE [dbo].[User](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[login_id] [varchar](50) NOT NULL,
	[password] [varchar](1000) NOT NULL,
	[user_name] [varchar](100) NOT NULL,
	[invalid_login_attempts] [int] NOT NULL CONSTRAINT [DF_User_invalid_login_attempts]  DEFAULT ((0)),
	[is_locked] [bit] NOT NULL CONSTRAINT [DF_User_is_locked]  DEFAULT ((0)),
	[profile_id] [int] NOT NULL,
 CONSTRAINT [PK_User] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO

ALTER TABLE [dbo].[User]  WITH CHECK ADD  CONSTRAINT [FK_User_ProfileType] FOREIGN KEY([profile_id])
REFERENCES [dbo].[ProfileType] ([Id])
GO

ALTER TABLE [dbo].[User] CHECK CONSTRAINT [FK_User_ProfileType]
GO


=================================================================================================================------------------------------------------------------------------------------------------------



INSERT INTO [User]([login_id],[password],[user_name],[invalid_login_attempts],[is_locked],[profile_id])
VALUES ('vipuld','pass','Vipul Deshbhratar',0,'False',1)


=================================================================================================================


USE [SQLTraining]
GO
/****** Object:  StoredProcedure [dbo].[a05014_authenticate_user]    Script Date: 20-10-2015 15:01:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
Auther: Neeraj Deshbhratar
Created on: 21-Oct-2015
Purpose: Authenticate user
Example:
exec authenticate_user 'vipuld', 'pass'
*/
CREATE procedure [dbo].[authenticate_user]
	@login_id varchar(50)
	, @password varchar(1000)
as
begin
	set nocount on
	------------------------------------------------------------------------------------------------------

	declare @is_valid_password bit = 1

	if exists(select id from [User] where login_id=@login_id and [password]!=@password)
	begin
		set @is_valid_password=0

		update [User] set invalid_login_attempts=invalid_login_attempts+1 where login_id=@login_id

		if ((select invalid_login_attempts from [User] where login_id=@login_id)>=3)
		begin
			update [User] set is_locked=1 where login_id=@login_id
		end
	end
	else if exists(select id from [User] where login_id=@login_id and [password]=@password)
	begin
		update [User] set invalid_login_attempts=0, is_locked=0 where login_id=@login_id
	end

	select	@is_valid_password as is_valid_password, u.id , login_id, password, [user_name], invalid_login_attempts, is_locked
			, p.id as [profile_id], p.Code, p.Name
	from	[User] u
			join ProfileType p on u.profile_id=p.id
	where	login_id=@login_id

	------------------------------------------------------------------------------------------------------
	set nocount off
end

============================================================================================================


select @@SERVERNAME

============================================================================================================